<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SETUP
value       = 0;
timeToLive  = 1;
life        = (room_speed * timeToLive);

// damage
hFriction   = 0.01;
hForce      = 1;
hDirection  = choose(0, 180);
initialVForce = 4;
grav        = 0.2;
vForce      = initialVForce;
vFriction   = 0.03;
ground      = y;


// healing
healGravity = 0.05;
healVForce  = 2;
minY        = y-100;

depth       = global.infoDepth;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// time out
if (value &lt; 0) {
    y -= healVForce;
    if (healVForce &gt; 0) then healVForce -= healGravity;
    if (healVForce &lt; 0) then healVForce = 0;
    
    //if (y &lt; minY) then y = minY;
}
else {
    if (hDirection == 0) {
        x += hForce;
    } else {
        x -= hForce;
    }
    
    if (hForce &gt; 0) then hForce -= hFriction;
    if (hForce &lt; 0) then hForce = 0;
    
    y -= vForce;
    vForce -= grav;
    
    if (y &gt;= ground) {
        vForce = delta(initialVForce * 0.5)
        initialVForce *= 0.5;
    }
}


life--;
if (life &lt;= 0) then instance_destroy(self, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animate

if (value &lt; 0) {
    colour = global.heal_colour;
    outline_colour = global.heal_outline_colour;
} else {
    colour = global.damage_colour;
    outline_colour = global.damage_outline_colour;
}

draw_text_outlined(x,y,abs(value), outline_colour, colour, global.combat_font);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
